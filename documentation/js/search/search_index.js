var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.076,1,1.846]],["body/controllers/AppController.html",[0,1.679,1,2.88,2,1.464,3,0.412,4,0.349,5,0.349,6,3.013,7,0.549,8,1.238,9,4.42,10,1.803,11,0.039,12,0.703,13,3.66,14,0.975,15,1.858,16,0.523,17,3.66,18,0.549,19,2.515,20,3.013,21,0.412,22,0.072,23,2.587,24,3.66,25,1.323,26,3.66,27,0.024,28,0.03,29,0.024]],["title/modules/AppModule.html",[30,1.319,31,1.846]],["body/modules/AppModule.html",[1,2.319,2,1.241,3,0.231,4,0.196,5,0.196,8,0.547,11,0.04,12,0.394,14,0.547,16,0.623,18,0.308,19,2.321,20,1.689,21,0.231,22,0.041,27,0.013,28,0.02,29,0.013,30,1.658,31,3.355,32,1.011,33,1.011,34,1.272,35,1.272,36,1.011,37,2.319,38,1.272,39,1.689,40,1.689,41,1.689,42,2.593,43,2.593,44,2.321,45,1.923,46,1.272,47,1.272,48,2.052,49,2.319,50,2.193,51,2.052,52,3.103,53,4.171,54,2.052,55,0.671,56,0.492,57,0.667,58,0.671,59,3.103,60,1.451,61,2.052,62,2.052,63,2.052,64,1.272,65,2.052,66,3.103,67,3.103,68,3.103,69,1.689,70,1.923,71,2.052,72,2.052,73,1.923,74,2.052,75,1.923,76,2.052,77,2.052,78,1.689,79,1.451,80,1.13,81,2.052,82,2.052,83,2.052,84,2.052,85,2.06,86,2.052,87,2.052,88,1.689,89,2.052,90,2.052,91,2.052,92,2.052,93,2.052,94,1.689,95,2.052,96,2.052,97,2.052,98,2.052,99,2.052,100,3.741,101,3.741,102,2.052,103,2.052]],["title/injectables/AppService.html",[19,1.467,104,0.507]],["body/injectables/AppService.html",[3,0.437,4,0.37,5,0.37,7,0.582,8,1.284,9,4.515,11,0.038,12,0.745,14,1.034,15,1.928,16,0.437,18,0.582,19,2.375,21,0.437,22,0.077,25,1.403,27,0.025,28,0.031,29,0.025,104,0.821,105,1.552,106,3.195,107,3.881,108,3.881,109,3.881]],["title/guards/AuthGuard.html",[73,1.846,110,2.105]],["body/guards/AuthGuard.html",[3,0.385,4,0.326,5,0.326,7,0.513,8,1.184,11,0.039,12,0.656,14,0.91,16,0.5,18,0.513,21,0.385,22,0.068,25,1.235,27,0.022,28,0.029,29,0.022,55,1.116,56,0.819,57,0.735,58,1.116,73,2.756,85,1.881,104,0.757,111,3.417,112,2.813,113,5.425,114,3.417,115,4.308,116,3.417,117,3.659,118,4.445,119,4.445,120,4.068,121,2.415,122,1.881]],["title/controllers/CatsController.html",[0,1.076,49,1.846]],["body/controllers/CatsController.html",[0,0.768,2,0.85,3,0.239,4,0.203,5,0.203,7,0.319,8,0.849,10,2.241,11,0.039,12,0.873,14,1.212,16,0.538,18,0.319,21,0.239,22,0.042,23,1.503,25,1.643,27,0.014,28,0.021,29,0.014,44,1.57,49,1.975,55,1.486,56,1.091,57,0.978,58,1.486,123,1.75,124,1.503,125,2.126,126,3.186,127,1.975,128,1.975,129,1.975,130,1.975,131,2.126,132,2.632,133,2.126,134,2.369,135,2.126,136,3.599,137,1.318,138,3.228,139,2.623,140,2.126,141,2.352,142,1.75,143,2.126,144,3.146,145,1.318,146,2.623,147,2.126,148,1.318,149,2.623,150,2.126,151,1.75,152,1.503,153,1.503,154,2.623,155,1.75,156,1.75,157,1.75,158,2.126,159,1.75,160,1.503,161,1.318,162,2.126,163,2.126,164,2.126,165,1.503,166,2.126,167,2.252,168,2.126,169,2.126,170,2.126,171,2.126,172,2.126,173,1.75,174,2.126,175,2.126,176,2.126,177,2.126,178,2.126,179,2.126,180,1.75,181,2.126]],["title/injectables/CatsService.html",[44,1.467,104,0.507]],["body/injectables/CatsService.html",[3,0.249,4,0.211,5,0.211,7,0.332,8,0.874,11,0.04,12,0.93,14,1.232,15,0.884,16,0.249,18,0.332,21,0.249,22,0.044,25,1.751,27,0.028,28,0.021,29,0.014,44,1.617,55,1.511,56,1.109,57,1.042,58,1.511,104,0.559,105,0.884,127,2.034,128,2.034,129,2.034,130,2.034,137,2.034,138,3.262,141,1.928,142,2.701,144,1.82,145,2.034,148,2.034,153,1.563,182,1.82,183,2.034,184,4.472,185,2.319,186,2.211,187,2.211,188,2.211,189,2.701,190,2.211,191,2.211,192,1.371,193,1.563,194,2.211,195,1.563,196,3.912,197,1.371,198,2.211,199,3.912,200,3.912,201,1.82,202,1.371,203,2.211,204,2.211,205,2.211,206,2.211,207,2.211,208,2.211,209,2.211,210,2.211,211,2.211,212,2.211,213,2.211]],["title/classes/CreateCatDto.html",[22,0.059,132,1.846]],["body/classes/CreateCatDto.html",[3,0.399,4,0.338,5,0.338,7,0.531,10,1.745,11,0.038,12,0.68,15,2.121,16,0.399,21,0.399,22,0.09,27,0.023,28,0.029,29,0.023,56,1.316,57,0.762,132,2.821,183,2.821,214,1.95,215,3.746,216,2.916,217,3.542,218,4.55,219,4.55,220,4.55,221,4.55,222,4.55,223,3.542,224,4.55,225,3.542,226,2.504,227,2.504,228,2.196,229,2.916]],["title/classes/HttpExceptionFilter.html",[22,0.059,70,1.846]],["body/classes/HttpExceptionFilter.html",[3,0.342,4,0.29,5,0.29,7,0.456,8,1.096,11,0.039,12,0.584,14,0.81,16,0.463,18,0.456,21,0.342,22,0.06,27,0.02,28,0.027,29,0.02,55,0.993,56,0.729,57,0.654,58,0.993,60,2.148,70,2.55,88,3.838,122,2.264,159,3.386,160,3.295,161,1.884,195,3.531,197,3.096,202,1.884,214,1.673,229,2.502,230,3.386,231,2.502,232,4.662,233,3.295,234,4.113,235,4.995,236,3.039,237,3.039,238,3.039,239,3.039,240,3.039,241,3.039,242,3.039,243,2.907,244,3.039,245,3.039,246,3.039,247,3.039,248,3.039,249,3.039,250,3.039,251,3.039,252,3.039]],["title/injectables/LoggerInterceptor.html",[75,1.846,104,0.507]],["body/injectables/LoggerInterceptor.html",[3,0.362,4,0.307,5,0.307,7,0.483,8,1.138,11,0.039,12,0.618,14,0.857,16,0.54,18,0.483,21,0.362,22,0.064,25,1.163,27,0.021,28,0.028,29,0.021,55,1.051,56,0.771,57,0.692,58,1.051,75,2.649,104,0.728,105,1.286,115,4.208,117,2.649,120,3.949,121,2.274,122,1.771,253,2.649,254,4.273,255,4.273,256,3.391,257,5.111,258,3.217,259,4.273,260,4.273,261,3.217,262,3.217,263,4.273,264,3.217,265,3.217,266,4.273,267,3.217,268,3.217,269,3.217]],["title/injectables/LoggerMiddleware.html",[64,1.846,104,0.507]],["body/injectables/LoggerMiddleware.html",[3,0.392,4,0.331,5,0.331,7,0.522,8,1.198,11,0.039,12,0.668,14,0.927,16,0.392,18,0.522,21,0.392,22,0.069,27,0.022,28,0.029,29,0.022,55,1.137,56,0.834,57,0.748,58,1.137,60,3.522,64,2.788,104,0.766,105,1.391,122,1.915,151,2.864,152,3.522,256,3.724,270,2.864,271,4.497,272,4.497,273,3.478,274,2.864,275,4.497,276,3.478,277,3.478]],["title/injectables/LowerCasePipe.html",[104,0.507,134,1.846]],["body/injectables/LowerCasePipe.html",[3,0.401,4,0.339,5,0.339,7,0.534,8,1.216,11,0.038,12,0.683,14,0.948,16,0.401,18,0.534,21,0.401,22,0.07,25,1.286,27,0.023,28,0.03,29,0.023,55,1.163,56,0.853,57,0.765,58,1.163,104,0.778,105,1.423,122,1.959,134,2.829,165,3.226,193,3.226,278,2.93,279,4.564,280,4.564,281,4.147,282,5.314,283,3.559,284,4.564,285,3.559,286,3.559]],["title/classes/Tarefa.html",[22,0.059,287,1.467]],["body/classes/Tarefa.html",[3,0.254,4,0.215,5,0.215,7,0.339,10,2.404,11,0.039,12,0.937,15,1.332,16,0.446,21,0.254,22,0.066,27,0.015,28,0.022,29,0.015,56,1.309,57,1.114,138,2.71,141,1.951,183,2.065,192,2.065,214,1.242,226,1.595,227,2.354,228,1.399,243,3.296,287,1.641,288,1.858,289,3.26,290,3.26,291,2.018,292,3.599,293,1.858,294,2.742,295,2.256,296,1.858,297,3.331,298,2.256,299,2.256,300,2.742,301,4.018,302,3.839,303,2.256,304,1.858,305,2.354,306,2.742,307,2.256,308,1.858,309,2.742,310,2.256,311,2.256,312,2.256,313,2.742,314,2.256,315,2.742,316,3.26,317,1.858,318,2.742,319,2.742,320,1.858,321,1.858,322,2.256,323,1.858,324,2.256,325,3.331,326,3.331,327,1.399,328,2.742,329,2.256,330,1.595,331,1.858]],["title/controllers/TarefaController.html",[0,1.076,332,1.846]],["body/controllers/TarefaController.html",[0,1.534,2,1.697,3,0.478,4,0.404,5,0.404,11,0.037,16,0.478,18,0.637,21,0.478,22,0.084,27,0.027,28,0.033,29,0.027,124,3,287,2.091,332,3.156,333,3.495,334,4.245]],["title/modules/TarefaModule.html",[30,1.319,42,1.639]],["body/modules/TarefaModule.html",[2,1.699,3,0.359,4,0.304,5,0.304,11,0.039,16,0.614,18,0.479,21,0.359,22,0.063,27,0.021,28,0.027,29,0.021,30,2.117,32,1.572,33,1.572,34,1.978,35,1.978,36,1.572,37,2.962,38,1.978,42,3.003,45,2.634,46,1.978,47,1.978,50,2.255,79,2.255,80,1.756,287,2.093,291,1.276,332,2.962,335,2.627,336,2.627,337,3.003,338,3.19,339,3.19,340,3.19,341,1.978,342,3.19,343,2.627]],["title/injectables/TarefaService.html",[104,0.507,337,1.639]],["body/injectables/TarefaService.html",[3,0.483,4,0.409,5,0.409,11,0.038,16,0.483,18,0.644,21,0.483,22,0.085,27,0.028,28,0.033,29,0.028,104,0.873,105,1.716,337,2.821,344,3.534]],["title/classes/Usuario.html",[22,0.059,291,1.191]],["body/classes/Usuario.html",[3,0.209,4,0.177,5,0.177,7,0.278,10,2.403,11,0.039,12,0.937,15,1.81,16,0.445,21,0.209,22,0.057,27,0.012,28,0.019,29,0.012,56,1.268,57,1.166,85,2.178,94,2.893,138,2.453,141,1.731,183,1.78,192,1.78,214,1.021,226,2.03,227,2.797,228,1.15,243,3.025,287,2.109,289,2.893,290,2.893,291,1.148,292,3.257,293,1.527,294,2.364,296,1.527,300,2.364,301,4.016,302,4.212,304,1.527,305,2.03,306,2.364,308,1.527,309,2.364,313,2.364,315,2.364,316,3.523,317,1.527,318,2.364,319,2.364,320,1.527,321,1.527,323,2.364,327,1.15,328,2.893,330,2.484,331,1.527,345,1.527,346,4.28,347,1.855,348,1.855,349,3.956,350,3.956,351,2.872,352,2.872,353,1.855,354,1.855,355,2.872,356,1.855,357,2.872,358,2.872,359,2.872,360,1.855,361,1.855,362,1.855,363,1.855,364,2.872,365,1.855,366,1.855,367,1.855,368,4.28,369,1.527,370,1.527,371,1.855]],["title/controllers/UsuarioController.html",[0,1.076,372,1.846]],["body/controllers/UsuarioController.html",[0,0.56,2,0.619,3,0.174,4,0.148,5,0.148,7,0.232,8,0.664,10,1.933,11,0.039,12,0.753,14,1.045,15,1.89,16,0.403,18,0.232,21,0.174,22,0.031,23,1.095,25,1.418,27,0.027,28,0.016,29,0.01,55,1.282,56,0.941,57,0.844,58,1.282,124,1.095,127,1.544,128,1.544,129,1.544,130,1.544,136,3.238,137,0.96,139,2.051,141,2.064,145,0.96,146,2.051,148,0.96,149,2.051,152,3.863,154,2.572,155,1.275,156,1.275,157,1.275,160,3.764,161,0.96,173,1.275,180,1.275,185,1.761,197,2.432,233,2.773,256,3.916,291,1.761,341,0.96,370,1.275,372,1.544,373,1.275,374,4.337,375,5.325,376,1.549,377,1.549,378,1.549,379,1.549,380,1.549,381,1.549,382,1.549,383,1.539,384,1.275,385,1.549,386,1.549,387,3.229,388,3.229,389,1.549,390,3.923,391,3.229,392,3.923,393,1.549,394,1.549,395,1.549,396,1.549,397,1.549,398,1.549]],["title/modules/UsuarioModule.html",[30,1.319,43,1.639]],["body/modules/UsuarioModule.html",[2,1.671,3,0.35,4,0.297,5,0.297,11,0.039,16,0.592,18,0.467,21,0.35,22,0.062,27,0.02,28,0.027,29,0.02,30,2.091,32,1.534,33,1.534,34,1.93,35,1.93,36,1.534,37,2.925,38,2.925,43,3.047,45,2.591,46,1.93,47,1.93,50,2.201,79,2.201,80,1.714,291,1.671,341,1.93,343,2.563,372,2.925,383,2.882,384,2.563,399,2.563,400,2.563,401,2.563,402,3.113,403,3.113]],["title/injectables/UsuarioService.html",[104,0.507,383,1.467]],["body/injectables/UsuarioService.html",[3,0.199,4,0.168,5,0.168,7,0.265,8,0.736,11,0.04,12,0.852,14,1.114,15,1.972,16,0.434,18,0.265,21,0.199,22,0.035,25,1.511,27,0.032,28,0.018,29,0.011,55,1.367,56,1.003,57,0.9,58,1.367,80,0.972,85,0.972,104,0.471,105,0.706,127,1.713,128,2.388,129,1.713,130,1.713,136,2.723,137,1.713,141,1.898,145,1.713,148,1.713,153,1.248,184,1.453,185,1.953,189,2.275,195,1.248,197,2.388,201,3.443,202,2.593,233,2.956,291,1.854,327,1.094,330,1.248,341,1.094,374,4.461,383,1.362,387,3.443,388,3.651,391,3.443,404,1.453,405,2.763,406,1.765,407,3.172,408,1.765,409,2.763,410,1.765,411,1.765,412,1.765,413,1.765,414,1.765,415,1.765,416,1.765,417,1.765,418,1.765,419,1.765,420,4.182,421,4.182,422,1.765,423,1.765,424,2.763,425,1.765,426,1.765,427,1.765,428,1.765,429,1.765,430,1.765]],["title/coverage.html",[431,2.867]],["body/coverage.html",[0,1.721,1,1.685,5,0.259,6,2.238,11,0.039,19,1.339,22,0.094,27,0.018,28,0.025,29,0.018,36,1.339,44,1.339,49,1.685,57,0.585,64,1.685,70,1.685,73,1.685,75,1.685,104,0.909,106,2.238,110,1.921,112,2.238,123,2.238,132,1.685,134,1.685,165,1.921,167,1.921,182,2.238,202,1.685,215,2.238,216,2.238,230,2.238,231,2.238,253,2.238,270,2.238,274,2.238,278,2.238,287,1.339,288,2.238,291,1.087,332,1.685,333,2.238,337,1.496,344,2.238,345,2.238,372,1.685,373,2.238,383,1.339,404,2.238,431,1.921,432,2.718,433,2.718,434,2.718,435,5.918,436,5.447,437,3.808,438,4.396,439,2.238,440,2.718,441,4.763,442,2.718,443,2.238,444,2.718,445,2.718]],["title/dependencies.html",[33,1.763,446,2.49]],["body/dependencies.html",[11,0.039,18,0.544,22,0.091,27,0.023,28,0.03,29,0.023,33,1.786,69,2.985,78,2.985,80,1.996,121,2.563,161,2.863,228,2.248,281,2.985,327,2.248,369,2.985,447,5.082,448,3.626,449,3.626,450,3.626,451,3.626,452,3.626,453,3.626,454,3.626,455,3.626,456,3.626,457,3.626,458,3.626,459,3.626,460,3.626,461,3.626,462,3.626,463,3.626,464,3.626,465,3.626]],["title/miscellaneous/functions.html",[466,1.544,467,2.946]],["body/miscellaneous/functions.html",[7,0.674,11,0.034,27,0.029,28,0.034,29,0.029,36,2.752,443,3.698,466,2.785,467,3.698,468,4.492]],["title/index.html",[7,0.374,469,2.49,470,2.49]],["body/index.html",[4,0.284,11,0.038,27,0.019,28,0.026,29,0.019,407,2.454,431,2.107,471,2.981,472,2.981,473,4.059,474,2.981,475,2.981,476,2.981,477,2.981,478,2.981,479,2.981,480,2.981,481,2.981,482,2.981,483,2.981,484,4.615,485,2.981,486,2.981,487,2.981,488,5.473,489,2.981,490,2.981,491,2.981,492,5.349,493,2.981,494,2.981,495,4.059,496,2.981,497,2.981,498,2.981,499,2.981,500,4.059,501,4.059,502,2.981,503,2.981,504,2.981,505,4.059,506,4.059,507,2.981,508,2.981,509,2.981,510,2.981,511,2.981,512,2.454,513,2.981,514,2.981,515,2.981,516,2.981,517,2.981,518,2.981,519,2.981,520,2.981,521,2.981,522,2.981,523,2.981,524,2.981,525,2.981,526,2.981,527,2.981,528,2.981,529,2.981,530,2.981]],["title/modules.html",[32,1.998]],["body/modules.html",[11,0.033,27,0.028,28,0.033,29,0.028,31,2.661,32,2.115,42,2.363,43,2.363,512,4.511,531,5.479,532,5.479,533,5.479]],["title/overview.html",[534,3.339]],["body/overview.html",[2,1.297,11,0.037,19,2.373,27,0.021,28,0.028,29,0.021,30,1.438,31,3.597,32,1.598,33,1.598,34,2.011,35,2.011,36,1.598,37,2.011,38,2.011,39,2.671,40,2.671,41,2.671,42,2.937,43,3.018,44,2.373,45,2.663,46,2.011,47,2.011,105,1.297,110,2.293,214,1.786,305,2.293,335,2.671,336,2.671,337,2.652,383,2.755,399,2.671,400,2.671,401,2.671,534,2.671,535,3.244,536,4.296,537,3.244]],["title/miscellaneous/variables.html",[466,1.544,538,2.946]],["body/miscellaneous/variables.html",[7,0.651,11,0.038,27,0.028,28,0.033,29,0.028,85,2.389,167,3.647,192,2.691,193,3.068,439,3.573,466,2.691,538,3.573,539,4.34,540,4.34]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":305,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{},"overview.html":{}}}],["150",{"_index":358,"title":{},"body":{"classes/Usuario.html":{}}}],["3",{"_index":535,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":536,"title":{},"body":{"overview.html":{}}}],["4.1.4",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["4.5.9",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["5433",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["6.5.3",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":351,"title":{},"body":{"classes/Usuario.html":{}}}],["7",{"_index":537,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["acessar",{"_index":269,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["amazing",{"_index":513,"title":{},"body":{"index.html":{}}}],["angular",{"_index":482,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":368,"title":{},"body":{"classes/Usuario.html":{}}}],["apiproperty()@isoptional()@onetomany(undefined",{"_index":362,"title":{},"body":{"classes/Usuario.html":{}}}],["app",{"_index":490,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":479,"title":{},"body":{"index.html":{}}}],["apply(loggermiddleware",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":31,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":282,"title":{},"body":{"injectables/LowerCasePipe.html":{}}}],["argumentshost",{"_index":235,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":374,"title":{},"body":{"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["authguard",{"_index":73,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":523,"title":{},"body":{"index.html":{}}}],["autoloadentities",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":388,"title":{},"body":{"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["backers",{"_index":514,"title":{},"body":{"index.html":{}}}],["bater",{"_index":264,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["beforeinsert",{"_index":321,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["body",{"_index":136,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["boolean",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":533,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":531,"title":{},"body":{"modules.html":{}}}],["building",{"_index":474,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":257,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["campo",{"_index":219,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["canactivate",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cascade",{"_index":364,"title":{},"body":{"classes/Usuario.html":{}}}],["case.pipe",{"_index":166,"title":{},"body":{"controllers/CatsController.html":{}}}],["case.pipe.ts",{"_index":278,"title":{},"body":{"injectables/LowerCasePipe.html":{},"coverage.html":{}}}],["case.pipe.ts:5",{"_index":283,"title":{},"body":{"injectables/LowerCasePipe.html":{}}}],["cat",{"_index":209,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.dto",{"_index":164,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto.ts",{"_index":216,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:7",{"_index":223,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.id",{"_index":199,"title":{},"body":{"injectables/CatsService.html":{}}}],["catch",{"_index":233,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["catch(exception",{"_index":234,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":238,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cats",{"_index":125,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.service",{"_index":162,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats/cats.controller",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.service",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":49,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["catservice",{"_index":170,"title":{},"body":{"controllers/CatsController.html":{}}}],["catsservice",{"_index":44,"title":{"injectables/CatsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":22,"title":{"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":214,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tarefamodule",{"_index":335,"title":{},"body":{"modules/TarefaModule.html":{},"overview.html":{}}}],["cluster_tarefamodule_providers",{"_index":336,"title":{},"body":{"modules/TarefaModule.html":{},"overview.html":{}}}],["cluster_usuariomodule",{"_index":399,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["cluster_usuariomodule_exports",{"_index":400,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["cluster_usuariomodule_providers",{"_index":401,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["column",{"_index":316,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["column({name",{"_index":304,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["com",{"_index":212,"title":{},"body":{"injectables/CatsService.html":{}}}],["configmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('antes",{"_index":262,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["console.log('depois",{"_index":268,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["console.log('query",{"_index":276,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["const",{"_index":197,"title":{},"body":{"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["constructor",{"_index":405,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["constructor(usuariorepository",{"_index":406,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["consumer",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/TarefaController.html":{},"controllers/UsuarioController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/TarefaController.html":{},"controllers/UsuarioController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":169,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('tarefa",{"_index":334,"title":{},"body":{"controllers/TarefaController.html":{}}}],["controller('usuarios",{"_index":385,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["coverage",{"_index":431,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":126,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(@body",{"_index":176,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(body",{"_index":131,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":132,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["createdat",{"_index":289,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["createdatecolumn",{"_index":318,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["createdatecolumn({name",{"_index":293,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["ctx",{"_index":239,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":242,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":241,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["data",{"_index":184,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsuarioService.html":{}}}],["database",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":292,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["date().toisostring",{"_index":249,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["de",{"_index":263,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["declarations",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{}}}],["default",{"_index":192,"title":{},"body":{"injectables/CatsService.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["deletado",{"_index":211,"title":{},"body":{"injectables/CatsService.html":{}}}],["delete",{"_index":156,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["delete(':id",{"_index":139,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["deleted",{"_index":430,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["deletedatecolumn",{"_index":320,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["dependencies",{"_index":33,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":483,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":127,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["destroy(@param('id",{"_index":180,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["destroy(id",{"_index":137,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["deve",{"_index":220,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["development",{"_index":491,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["dt_altera",{"_index":309,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["dt_cadast",{"_index":294,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["dto/create",{"_index":163,"title":{},"body":{"controllers/CatsController.html":{}}}],["e2e",{"_index":502,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":475,"title":{},"body":{"index.html":{}}}],["email",{"_index":346,"title":{},"body":{"classes/Usuario.html":{}}}],["encontrado",{"_index":205,"title":{},"body":{"injectables/CatsService.html":{}}}],["entity",{"_index":315,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["error",{"_index":391,"title":{},"body":{"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["exception",{"_index":237,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["exception.filter.ts",{"_index":231,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":236,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":250,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":244,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":232,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerInterceptor.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{}}}],["exports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["express",{"_index":161,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsuarioController.html":{},"dependencies.html":{}}}],["false",{"_index":302,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["false})@joincolumn({name",{"_index":312,"title":{},"body":{"classes/Tarefa.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{}}}],["forroutes('cats",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":473,"title":{},"body":{"index.html":{}}}],["function",{"_index":274,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":467,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":146,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getone",{"_index":425,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["getting",{"_index":469,"title":{"index.html":{}},"body":{}}],["grow",{"_index":509,"title":{},"body":{"index.html":{}}}],["guard",{"_index":110,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["heavily",{"_index":480,"title":{},"body":{"index.html":{}}}],["hello",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":520,"title":{},"body":{"index.html":{}}}],["host",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":240,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":195,"title":{},"body":{"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UsuarioService.html":{}}}],["httpexception('registro",{"_index":203,"title":{},"body":{"injectables/CatsService.html":{}}}],["httpexception(error",{"_index":420,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["httpexceptionfilter",{"_index":70,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":527,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":153,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/UsuarioService.html":{}}}],["httpstatus.internal_server_error",{"_index":421,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["httpstatus.not_found",{"_index":206,"title":{},"body":{"injectables/CatsService.html":{}}}],["id",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["id_tarefa",{"_index":297,"title":{},"body":{"classes/Tarefa.html":{}}}],["id_usuario",{"_index":313,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["identifier",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["idusuario",{"_index":424,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["implements",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{}}}],["injectable",{"_index":104,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"injectables/TarefaService.html":{},"injectables/UsuarioService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CatsService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"injectables/TarefaService.html":{},"injectables/UsuarioService.html":{},"coverage.html":{}}}],["injectables",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"injectables/TarefaService.html":{},"injectables/UsuarioService.html":{},"overview.html":{}}}],["injectrepository",{"_index":415,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["injectrepository(usuario",{"_index":416,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["inspired",{"_index":481,"title":{},"body":{"index.html":{}}}],["installation",{"_index":487,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":489,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":254,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["intercept(context",{"_index":255,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["interceptor/logger.interceptor",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["isdefined",{"_index":227,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["isdefined()@apiproperty()@column({name",{"_index":355,"title":{},"body":{"classes/Usuario.html":{}}}],["isdefined()@column({name",{"_index":299,"title":{},"body":{"classes/Tarefa.html":{}}}],["isemail",{"_index":226,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["isemail()@isdefined()@apiproperty()@column({name",{"_index":348,"title":{},"body":{"classes/Usuario.html":{}}}],["isglobal",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":225,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isoptional",{"_index":328,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["isoptional()@primarygeneratedcolumn('uuid",{"_index":296,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["isstring",{"_index":224,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring({message",{"_index":217,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["join",{"_index":516,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":326,"title":{},"body":{"classes/Tarefa.html":{}}}],["json",{"_index":246,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["kamil",{"_index":524,"title":{},"body":{"index.html":{}}}],["legend",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["length",{"_index":350,"title":{},"body":{"classes/Usuario.html":{}}}],["license",{"_index":530,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":506,"title":{},"body":{"index.html":{}}}],["loadall",{"_index":128,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["loadall(@query",{"_index":171,"title":{},"body":{"controllers/CatsController.html":{}}}],["loadall(@res",{"_index":386,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["loadall(query",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["loadall(res",{"_index":377,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["loadone",{"_index":129,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["loadone(@param('id",{"_index":173,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["loadone(id",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["loggerinterceptor",{"_index":75,"title":{"injectables/LoggerInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["loggermiddleware",{"_index":64,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["lowercasepipe",{"_index":134,"title":{"injectables/LowerCasePipe.html":{}},"body":{"controllers/CatsController.html":{},"injectables/LowerCasePipe.html":{},"coverage.html":{}}}],["manytomany",{"_index":324,"title":{},"body":{"classes/Tarefa.html":{}}}],["manytoone",{"_index":325,"title":{},"body":{"classes/Tarefa.html":{}}}],["manytoone(undefined",{"_index":311,"title":{},"body":{"classes/Tarefa.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":229,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":281,"title":{},"body":{"injectables/LowerCasePipe.html":{},"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["middlewareconsumer",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/http",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/logger.middleware",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":466,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":505,"title":{},"body":{"index.html":{}}}],["mode",{"_index":495,"title":{},"body":{"index.html":{}}}],["module",{"_index":30,"title":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["modules",{"_index":32,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/tarefa/tarefa.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/usuario/usuario.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":519,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":525,"title":{},"body":{"index.html":{}}}],["na",{"_index":265,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["name",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["nest",{"_index":484,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":529,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":259,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":369,"title":{},"body":{"classes/Usuario.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":275,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["new",{"_index":202,"title":{},"body":{"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UsuarioService.html":{},"coverage.html":{}}}],["next",{"_index":256,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UsuarioController.html":{}}}],["next(error",{"_index":392,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["next.handle().pipe",{"_index":267,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["nextfunction",{"_index":375,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["node.js",{"_index":472,"title":{},"body":{"index.html":{}}}],["nome",{"_index":300,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["npm",{"_index":488,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":301,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["number",{"_index":138,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["number(id",{"_index":200,"title":{},"body":{"injectables/CatsService.html":{}}}],["não",{"_index":204,"title":{},"body":{"injectables/CatsService.html":{}}}],["o",{"_index":218,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["observable",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerInterceptor.html":{}}}],["onetomany",{"_index":323,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["onetoone",{"_index":322,"title":{},"body":{"classes/Tarefa.html":{}}}],["open",{"_index":507,"title":{},"body":{"index.html":{}}}],["optional",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["overview",{"_index":534,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":446,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":157,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["password",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"classes/Usuario.html":{}}}],["path",{"_index":251,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["pg",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["pipetransform",{"_index":284,"title":{},"body":{"injectables/LowerCasePipe.html":{}}}],["please",{"_index":517,"title":{},"body":{"index.html":{}}}],["port",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":154,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["post()@public()@usepipes(new",{"_index":133,"title":{},"body":{"controllers/CatsController.html":{}}}],["postgres",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":124,"title":{},"body":{"controllers/CatsController.html":{},"controllers/TarefaController.html":{},"controllers/UsuarioController.html":{}}}],["primarygeneratedcolumn",{"_index":317,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":331,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["private",{"_index":417,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["process.env.db_host",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_pass",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":497,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":471,"title":{},"body":{"index.html":{}}}],["project",{"_index":508,"title":{},"body":{"index.html":{}}}],["promise",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":183,"title":{},"body":{"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["provide",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["public",{"_index":167,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":155,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["put(':id",{"_index":149,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsuarioController.html":{}}}],["query",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["read",{"_index":518,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":419,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["repository",{"_index":407,"title":{},"body":{"injectables/UsuarioService.html":{},"index.html":{}}}],["req",{"_index":151,"title":{},"body":{"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{}}}],["req.query",{"_index":277,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request",{"_index":159,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["request.url",{"_index":252,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res",{"_index":152,"title":{},"body":{"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UsuarioController.html":{}}}],["res.send(result",{"_index":390,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["response",{"_index":160,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsuarioController.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LowerCasePipe.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["rimraf",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["rota",{"_index":266,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["run",{"_index":492,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":261,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["save",{"_index":185,"title":{},"body":{"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["save(@body",{"_index":394,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["save(body",{"_index":380,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["save(data",{"_index":189,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsuarioService.html":{}}}],["scalable",{"_index":476,"title":{},"body":{"index.html":{}}}],["select",{"_index":359,"title":{},"body":{"classes/Usuario.html":{}}}],["senha",{"_index":357,"title":{},"body":{"classes/Usuario.html":{}}}],["ser",{"_index":221,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["server",{"_index":477,"title":{},"body":{"index.html":{}}}],["setmetadata('public",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":478,"title":{},"body":{"index.html":{}}}],["smallint",{"_index":306,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"index.html":{}}}],["sponsors",{"_index":511,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:51",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":123,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:14",{"_index":143,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:19",{"_index":147,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:26",{"_index":135,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:31",{"_index":150,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:36",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.service.ts",{"_index":182,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:10",{"_index":188,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:20",{"_index":190,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:26",{"_index":191,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:38",{"_index":186,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:5",{"_index":194,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:6",{"_index":187,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":215,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/decorators/public.decorator",{"_index":168,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/decorators/public.decorator.ts",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/tarefas.entity",{"_index":342,"title":{},"body":{"modules/TarefaModule.html":{}}}],["src/entities/tarefas.entity.ts",{"_index":288,"title":{},"body":{"classes/Tarefa.html":{},"coverage.html":{}}}],["src/entities/tarefas.entity.ts:10",{"_index":298,"title":{},"body":{"classes/Tarefa.html":{}}}],["src/entities/tarefas.entity.ts:14",{"_index":303,"title":{},"body":{"classes/Tarefa.html":{}}}],["src/entities/tarefas.entity.ts:17",{"_index":307,"title":{},"body":{"classes/Tarefa.html":{}}}],["src/entities/tarefas.entity.ts:20",{"_index":295,"title":{},"body":{"classes/Tarefa.html":{}}}],["src/entities/tarefas.entity.ts:23",{"_index":310,"title":{},"body":{"classes/Tarefa.html":{}}}],["src/entities/tarefas.entity.ts:27",{"_index":314,"title":{},"body":{"classes/Tarefa.html":{}}}],["src/entities/usuario.entity",{"_index":341,"title":{},"body":{"modules/TarefaModule.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{}}}],["src/entities/usuario.entity.ts",{"_index":345,"title":{},"body":{"classes/Usuario.html":{},"coverage.html":{}}}],["src/entities/usuario.entity.ts:11",{"_index":354,"title":{},"body":{"classes/Usuario.html":{}}}],["src/entities/usuario.entity.ts:16",{"_index":356,"title":{},"body":{"classes/Usuario.html":{}}}],["src/entities/usuario.entity.ts:22",{"_index":353,"title":{},"body":{"classes/Usuario.html":{}}}],["src/entities/usuario.entity.ts:27",{"_index":360,"title":{},"body":{"classes/Usuario.html":{}}}],["src/entities/usuario.entity.ts:30",{"_index":361,"title":{},"body":{"classes/Usuario.html":{}}}],["src/entities/usuario.entity.ts:33",{"_index":347,"title":{},"body":{"classes/Usuario.html":{}}}],["src/entities/usuario.entity.ts:36",{"_index":366,"title":{},"body":{"classes/Usuario.html":{}}}],["src/entities/usuario.entity.ts:41",{"_index":365,"title":{},"body":{"classes/Usuario.html":{}}}],["src/guards/auth.guard.ts",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:6",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/interceptor/logger.interceptor.ts",{"_index":253,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/logger.interceptor.ts:7",{"_index":258,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["src/main.ts",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/http",{"_index":230,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/middlewares/logger.middleware.ts",{"_index":270,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/logger.middleware.ts:5",{"_index":273,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/modules/tarefa/tarefa.controller.ts",{"_index":333,"title":{},"body":{"controllers/TarefaController.html":{},"coverage.html":{}}}],["src/modules/tarefa/tarefa.module.ts",{"_index":338,"title":{},"body":{"modules/TarefaModule.html":{}}}],["src/modules/tarefa/tarefa.service.ts",{"_index":344,"title":{},"body":{"injectables/TarefaService.html":{},"coverage.html":{}}}],["src/modules/usuario/usuario.controller.ts",{"_index":373,"title":{},"body":{"controllers/UsuarioController.html":{},"coverage.html":{}}}],["src/modules/usuario/usuario.controller.ts:13",{"_index":378,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["src/modules/usuario/usuario.controller.ts:24",{"_index":379,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["src/modules/usuario/usuario.controller.ts:35",{"_index":381,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["src/modules/usuario/usuario.controller.ts:47",{"_index":382,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["src/modules/usuario/usuario.controller.ts:58",{"_index":376,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["src/modules/usuario/usuario.module.ts",{"_index":402,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["src/modules/usuario/usuario.service.ts",{"_index":404,"title":{},"body":{"injectables/UsuarioService.html":{},"coverage.html":{}}}],["src/modules/usuario/usuario.service.ts:13",{"_index":411,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/modules/usuario/usuario.service.ts:25",{"_index":412,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/modules/usuario/usuario.service.ts:37",{"_index":413,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/modules/usuario/usuario.service.ts:47",{"_index":414,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/modules/usuario/usuario.service.ts:58",{"_index":410,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/modules/usuario/usuario.service.ts:7",{"_index":408,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["src/pipes/lower",{"_index":165,"title":{},"body":{"controllers/CatsController.html":{},"injectables/LowerCasePipe.html":{},"coverage.html":{}}}],["start",{"_index":493,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":496,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":498,"title":{},"body":{"index.html":{}}}],["started",{"_index":470,"title":{"index.html":{}},"body":{}}],["starter",{"_index":486,"title":{},"body":{"index.html":{}}}],["statements",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":243,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["status(status",{"_index":245,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":247,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":521,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["sucesso",{"_index":213,"title":{},"body":{"injectables/CatsService.html":{}}}],["support",{"_index":512,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":532,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":260,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["tarefa",{"_index":287,"title":{"classes/Tarefa.html":{}},"body":{"classes/Tarefa.html":{},"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"classes/Usuario.html":{},"coverage.html":{}}}],["tarefa.controller",{"_index":339,"title":{},"body":{"modules/TarefaModule.html":{}}}],["tarefa.service",{"_index":340,"title":{},"body":{"modules/TarefaModule.html":{}}}],["tarefa.usuario",{"_index":371,"title":{},"body":{"classes/Usuario.html":{}}}],["tarefacontroller",{"_index":332,"title":{"controllers/TarefaController.html":{}},"body":{"controllers/TarefaController.html":{},"modules/TarefaModule.html":{},"coverage.html":{}}}],["tarefamodule",{"_index":42,"title":{"modules/TarefaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules.html":{},"overview.html":{}}}],["tarefas",{"_index":330,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{}}}],["tarefas.entity",{"_index":367,"title":{},"body":{"classes/Usuario.html":{}}}],["tarefaservice",{"_index":337,"title":{"injectables/TarefaService.html":{}},"body":{"modules/TarefaModule.html":{},"injectables/TarefaService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":501,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":504,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":503,"title":{},"body":{"index.html":{}}}],["tests",{"_index":500,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":510,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catservice.destroy(id",{"_index":181,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.loadall(query",{"_index":172,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.loadone(id",{"_index":174,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.save(body",{"_index":177,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.update(id",{"_index":179,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.data",{"_index":196,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.data.filter(cat",{"_index":210,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.data.find(cat",{"_index":198,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.data.map(cat",{"_index":208,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.data.push(data",{"_index":207,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.loadone(id",{"_index":428,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.usuariorepository.createquerybuilder('usuario",{"_index":422,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.usuariorepository.delete(id",{"_index":429,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.usuariorepository.find",{"_index":418,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.usuariorepository.save(data",{"_index":426,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.usuariorepository.update(id",{"_index":427,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["this.usuarioservice.destroy(id",{"_index":398,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["this.usuarioservice.loadall",{"_index":389,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["this.usuarioservice.loadone(id",{"_index":393,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["this.usuarioservice.save(body",{"_index":395,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["this.usuarioservice.update(id",{"_index":397,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["throw",{"_index":201,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsuarioService.html":{}}}],["timestamp",{"_index":248,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["tipo",{"_index":222,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["touch",{"_index":522,"title":{},"body":{"index.html":{}}}],["transform",{"_index":279,"title":{},"body":{"injectables/LowerCasePipe.html":{}}}],["transform(value",{"_index":280,"title":{},"body":{"injectables/LowerCasePipe.html":{}}}],["transformer",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":387,"title":{},"body":{"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["twitter",{"_index":528,"title":{},"body":{"index.html":{}}}],["type",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LowerCasePipe.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{},"coverage.html":{}}}],["typeorm",{"_index":327,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{},"injectables/UsuarioService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{}}}],["typeormmodule.forfeature",{"_index":343,"title":{},"body":{"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{}}}],["typeormmodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":485,"title":{},"body":{"index.html":{}}}],["ui",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":363,"title":{},"body":{"classes/Usuario.html":{}}}],["unique",{"_index":352,"title":{},"body":{"classes/Usuario.html":{}}}],["unit",{"_index":499,"title":{},"body":{"index.html":{}}}],["update",{"_index":130,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["update(@param",{"_index":178,"title":{},"body":{"controllers/CatsController.html":{}}}],["update(@param('id",{"_index":396,"title":{},"body":{"controllers/UsuarioController.html":{}}}],["update(id",{"_index":148,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsuarioController.html":{},"injectables/UsuarioService.html":{}}}],["updatedat",{"_index":290,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["updatedatecolumn",{"_index":319,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["updatedatecolumn({name",{"_index":308,"title":{},"body":{"classes/Tarefa.html":{},"classes/Usuario.html":{}}}],["use",{"_index":271,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":272,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["usepipes",{"_index":158,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes(new",{"_index":175,"title":{},"body":{"controllers/CatsController.html":{}}}],["username",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["usuario",{"_index":291,"title":{"classes/Usuario.html":{}},"body":{"classes/Tarefa.html":{},"modules/TarefaModule.html":{},"classes/Usuario.html":{},"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{}}}],["usuario.controller",{"_index":403,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["usuario.entity",{"_index":329,"title":{},"body":{"classes/Tarefa.html":{}}}],["usuario.service",{"_index":384,"title":{},"body":{"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{}}}],["usuariocontroller",{"_index":372,"title":{"controllers/UsuarioController.html":{}},"body":{"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["usuariomodule",{"_index":43,"title":{"modules/UsuarioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["usuariorepository",{"_index":409,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["usuarios",{"_index":370,"title":{},"body":{"classes/Usuario.html":{},"controllers/UsuarioController.html":{}}}],["usuarioservice",{"_index":383,"title":{"injectables/UsuarioService.html":{}},"body":{"controllers/UsuarioController.html":{},"modules/UsuarioModule.html":{},"injectables/UsuarioService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":228,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/Tarefa.html":{},"classes/Usuario.html":{},"dependencies.html":{}}}],["value",{"_index":193,"title":{},"body":{"injectables/CatsService.html":{},"injectables/LowerCasePipe.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":285,"title":{},"body":{"injectables/LowerCasePipe.html":{}}}],["value.name.tolowercase",{"_index":286,"title":{},"body":{"injectables/LowerCasePipe.html":{}}}],["varchar",{"_index":349,"title":{},"body":{"classes/Usuario.html":{}}}],["variable",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":538,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":494,"title":{},"body":{"index.html":{}}}],["website",{"_index":526,"title":{},"body":{"index.html":{}}}],["where('usuario.id",{"_index":423,"title":{},"body":{"injectables/UsuarioService.html":{}}}],["world",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":515,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/TarefaModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTarefaModule\n\nTarefaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTarefaModule->AppModule\n\n\n\n\n\nUsuarioModule\n\nUsuarioModule\n\nAppModule -->\n\nUsuarioModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nAppModule -->\n\nCatsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TarefaModule\n                        \n                        \n                            UsuarioModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CatsController } from './cats/cats.controller';\nimport { CatsService } from './cats/cats.service';\nimport { LoggerMiddleware } from './middlewares/logger.middleware';\nimport { APP_FILTER, APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { HttpExceptionFilter } from './middlewares/http-exception.filter';\nimport { AuthGuard } from './guards/auth.guard';\nimport { LoggerInterceptor } from './interceptor/logger.interceptor';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsuarioModule } from './modules/usuario/usuario.module';\nimport { TarefaModule } from './modules/tarefa/tarefa.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: 5433,\n      username: process.env.DB_USER,\n      password: process.env.DB_PASS,\n      database: process.env.DB_NAME,\n      autoLoadEntities: true,\n      synchronize: true,\n    }),\n    UsuarioModule,\n    TarefaModule,\n  ],\n  controllers: [AppController, CatsController],\n  providers: [\n    AppService,\n    CatsService,\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: LoggerInterceptor,\n    },\n  ],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes('cats');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                loadAll\n                            \n                            \n                                loadOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(body: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Public()@UsePipes(new LowerCasePipe())\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAll\n                        \n                        \n                    \n                \n            \n            \n                \nloadAll(query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOne\n                        \n                        \n                    \n                \n            \n            \n                \nloadOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Res, HttpStatus, Post, Put, Delete, Param, Query, Body, UsePipes } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { CatsService } from './cats.service';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { LowerCasePipe } from 'src/pipes/lower-case.pipe';\nimport { Public } from 'src/decorators/public.decorator';\n\n@Controller('cats')\nexport class CatsController {\n\n  constructor(private catService: CatsService) { }\n\n  @Get()\n  loadAll(@Query() query: any) {\n    return this.catService.loadAll(query);\n  }\n\n  @Get(':id')\n  loadOne(@Param('id') id: number) {\n    return this.catService.loadOne(id);\n  }\n\n  @Post()\n  @Public()\n  @UsePipes(new LowerCasePipe())\n  create(@Body() body: CreateCatDto) {\n    return this.catService.save(body);\n  }\n\n  @Put(':id')\n  update(@Param() id: number, @Body() body: any) {\n    return this.catService.update(id, body);\n  }\n\n  @Delete(':id')\n  destroy(@Param('id') id: number) {\n    return this.catService.destroy(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                loadAll\n                            \n                            \n                                loadOne\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAll\n                        \n                        \n                    \n                \n            \n            \n                \nloadAll(query: any)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOne\n                        \n                        \n                    \n                \n            \n            \n                \nloadOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cats.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\n\n@Injectable()\nexport class CatsService {\n  data = [];\n  loadAll(query: any) {\n    return this.data;\n  }\n\n  loadOne(id: number) {\n    const result = this.data.find(cat => cat.id === Number(id));\n\n    if (!result) {\n      throw new HttpException('Registro não encontrado', HttpStatus.NOT_FOUND);\n    }\n\n    return result;\n  }\n\n  save(data: any) {\n    this.data.push(data);\n\n    return data;\n  }\n\n  update(id: number, data: any) {\n    this.data = this.data.map(cat => {\n      if (cat.id === Number(id)) {\n        cat = data;\n      }\n\n      return data;\n    });\n\n    return data;\n  }\n\n  destroy(id: number) {\n    this.data = this.data.filter(cat => cat.id !== Number(id));\n\n    return 'Deletado com sucesso';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString({message: 'O campo name deve ser do tipo string'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt, IsEmail, IsDefined } from 'class-validator';\n\nexport class CreateCatDto {\n  @IsString({\n    message: 'O campo name deve ser do tipo string',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/http-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        message: exception.getResponse(),\n        path: request.url,\n      });\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerInterceptor.html":{"url":"injectables/LoggerInterceptor.html","title":"injectable - LoggerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/logger.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/logger.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggerInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('Antes de bater na rota');\n    return next.handle().pipe(\n      tap(() => console.log('Depois de acessar a rota'))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/logger.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/logger.middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    console.log('Query => ', req.query);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LowerCasePipe.html":{"url":"injectables/LowerCasePipe.html","title":"injectable - LowerCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LowerCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/lower-case.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/lower-case.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\n\n@Injectable()\nexport class LowerCasePipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    value.name = value.name.toLowerCase();\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tarefa.html":{"url":"classes/Tarefa.html","title":"class - Tarefa","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tarefa\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/tarefas.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'dt_cadast'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/tarefas.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@PrimaryGeneratedColumn('uuid', {name: 'id_tarefa'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/tarefas.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDefined()@Column({name: 'nome', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/tarefas.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'status', default: 1, nullable: false, type: 'smallint'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/tarefas.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'dt_altera'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/tarefas.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usuario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Usuario\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, {nullable: false})@JoinColumn({name: 'id_usuario'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/tarefas.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, DeleteDateColumn, BeforeInsert, OneToOne, OneToMany, ManyToMany, ManyToOne, JoinColumn } from 'typeorm';\nimport { IsEmail, IsDefined, IsOptional } from 'class-validator';\nimport { Usuario } from './usuario.entity';\n\n@Entity({ name: 'tarefas' })\nexport class Tarefa {\n\n  @IsOptional()\n  @PrimaryGeneratedColumn('uuid', { name: 'id_tarefa' })\n  id: number;\n\n  @IsDefined()\n  @Column({ name: 'nome', nullable: false })\n  name: string;\n\n  @Column({ name: 'status', default: 1, nullable: false, type: 'smallint' })\n  status: number;\n\n  @CreateDateColumn({ name: 'dt_cadast' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'dt_altera' })\n  updatedAt: Date;\n\n  @ManyToOne(() => Usuario, { nullable: false })\n  @JoinColumn({ name: 'id_usuario' })\n  usuario: Usuario;\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TarefaController.html":{"url":"controllers/TarefaController.html","title":"controller - TarefaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TarefaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tarefa/tarefa.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tarefa\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('tarefa')\nexport class TarefaController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TarefaModule.html":{"url":"modules/TarefaModule.html","title":"module - TarefaModule","body":"\n                   \n\n\n\n\n    Modules\n    TarefaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TarefaModule\n\n\n\ncluster_TarefaModule_providers\n\n\n\n\nTarefaService\n\nTarefaService\n\n\n\nTarefaModule\n\nTarefaModule\n\nTarefaModule -->\n\nTarefaService->TarefaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/tarefa/tarefa.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TarefaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TarefaController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TarefaController } from './tarefa.controller';\nimport { TarefaService } from './tarefa.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Usuario } from 'src/entities/usuario.entity';\nimport { Tarefa } from 'src/entities/tarefas.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Tarefa,\n    ]),\n  ],\n  controllers: [TarefaController],\n  providers: [TarefaService],\n})\nexport class TarefaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TarefaService.html":{"url":"injectables/TarefaService.html","title":"injectable - TarefaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TarefaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tarefa/tarefa.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class TarefaService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Usuario.html":{"url":"classes/Usuario.html","title":"class - Usuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Usuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/usuario.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                status\n                            \n                            \n                                tarefas\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'dt_cadast'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsDefined()@ApiProperty()@Column({name: 'email', type: 'varchar', length: 60, nullable: false, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@PrimaryGeneratedColumn('uuid', {name: 'id_usuario'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDefined()@ApiProperty()@Column({name: 'nome', nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDefined()@ApiProperty()@Column({name: 'senha', type: 'varchar', length: 150, nullable: false, select: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'status', default: 1, nullable: false, type: 'smallint'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tarefas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tarefa[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()@OneToMany(undefined, undefined, {cascade: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'dt_altera'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entities/usuario.entity.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Tarefa } from './tarefas.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, DeleteDateColumn, BeforeInsert, OneToMany } from 'typeorm';\nimport { IsEmail, IsDefined, IsOptional } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity({ name: 'usuarios' })\nexport class Usuario {\n\n  @IsOptional()\n  @PrimaryGeneratedColumn('uuid', { name: 'id_usuario' })\n  id: number;\n\n  @IsDefined()\n  @ApiProperty()\n  @Column({ name: 'nome', nullable: false })\n  name: string;\n\n  @IsEmail()\n  @IsDefined()\n  @ApiProperty()\n  @Column({ name: 'email', type: 'varchar', length: 60, nullable: false, unique: true })\n  email: string;\n\n  @IsDefined()\n  @ApiProperty()\n  @Column({ name: 'senha', type: 'varchar', length: 150, nullable: false, select: false })\n  password: string;\n\n  @Column({ name: 'status', default: 1, nullable: false, type: 'smallint' })\n  status: number;\n\n  @CreateDateColumn({ name: 'dt_cadast' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'dt_altera' })\n  updatedAt: Date;\n\n  @ApiProperty()\n  @IsOptional()\n  @OneToMany(() => Tarefa, tarefa => tarefa.usuario, { cascade: true })\n  tarefas: Tarefa[];\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsuarioController.html":{"url":"controllers/UsuarioController.html","title":"controller - UsuarioController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsuarioController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/usuario/usuario.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                usuarios\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Async\n                                loadAll\n                            \n                            \n                                    Async\n                                loadOne\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(id: string, res: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/usuario/usuario.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAll(res: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/usuario/usuario.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadOne(id: string, res: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/usuario/usuario.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(body: Usuario, res: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/usuario/usuario.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, body: Usuario, res: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/usuario/usuario.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Next, Res, Param, Post, Body, Put, Delete } from '@nestjs/common';\nimport { NextFunction, Response } from 'express';\n\nimport { UsuarioService } from './usuario.service';\nimport { Usuario } from 'src/entities/usuario.entity';\n\n@Controller('usuarios')\nexport class UsuarioController {\n\n  constructor(private usuarioService: UsuarioService) { }\n\n  @Get()\n  async loadAll(@Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const result = await this.usuarioService.loadAll();\n\n      return res.send(result);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  @Get(':id')\n  async loadOne(@Param('id') id: string, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const result = await this.usuarioService.loadOne(id);\n\n      return res.send(result);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  @Post()\n  async save(@Body() body: Usuario, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const result = await this.usuarioService.save(body);\n\n      return res.send(result);\n    } catch (error) {\n      next(error);\n    }\n\n  }\n\n  @Put(':id')\n  async update(@Param('id') id: string, @Body() body: Usuario, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const result = await this.usuarioService.update(id, body);\n\n      return res.send(result);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  @Delete(':id')\n  async destroy(@Param('id') id: string, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const result = await this.usuarioService.destroy(id);\n\n      return res.send(result);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuarioModule.html":{"url":"modules/UsuarioModule.html","title":"module - UsuarioModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuarioModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsuarioModule\n\n\n\ncluster_UsuarioModule_exports\n\n\n\ncluster_UsuarioModule_providers\n\n\n\n\nUsuarioService \n\nUsuarioService \n\n\n\nUsuarioModule\n\nUsuarioModule\n\nUsuarioService  -->\n\nUsuarioModule->UsuarioService \n\n\n\n\n\nUsuarioService\n\nUsuarioService\n\nUsuarioModule -->\n\nUsuarioService->UsuarioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/usuario/usuario.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsuarioService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsuarioController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsuarioService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Usuario } from 'src/entities/usuario.entity';\nimport { UsuarioController } from './usuario.controller';\nimport { UsuarioService } from './usuario.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Usuario,\n    ]),\n  ],\n  controllers: [UsuarioController],\n  providers: [UsuarioService],\n  exports: [UsuarioService],\n})\nexport class UsuarioModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsuarioService.html":{"url":"injectables/UsuarioService.html","title":"injectable - UsuarioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsuarioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/usuario/usuario.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Async\n                                loadAll\n                            \n                            \n                                    Async\n                                loadOne\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/usuario/usuario.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/usuario/usuario.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/usuario/usuario.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/usuario/usuario.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(data: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/usuario/usuario.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, body: Usuario)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/usuario/usuario.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Usuario } from 'src/entities/usuario.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsuarioService {\n  constructor(\n    @InjectRepository(Usuario)\n    private usuarioRepository: Repository\n  ) { }\n\n  async loadAll() {\n    try {\n      const result = await this.usuarioRepository.find({\n        relations: ['tarefas'],\n      });\n\n      return result;\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async loadOne(id: string) {\n    try {\n      const result = await this.usuarioRepository.createQueryBuilder('usuario')\n        .where('usuario.id = :idUsuario', { idUsuario: id })\n        .getOne();\n\n      return result;\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async save(data: Usuario) {\n    try {\n      const result = await this.usuarioRepository.save(data);\n\n      return result;\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async update(id: string, body: Usuario) {\n    try {\n      await this.usuarioRepository.update(id, body);\n\n      const result = await this.loadOne(id);\n      return result;\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async destroy(id: string) {\n    try {\n      await this.usuarioRepository.delete(id);\n\n      return { deleted: true };\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/tarefas.entity.ts\n            \n            class\n            Tarefa\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/entities/usuario.entity.ts\n            \n            class\n            Usuario\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/logger.interceptor.ts\n            \n            injectable\n            LoggerInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/tarefa/tarefa.controller.ts\n            \n            controller\n            TarefaController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tarefa/tarefa.service.ts\n            \n            injectable\n            TarefaService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/usuario/usuario.controller.ts\n            \n            controller\n            UsuarioController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/usuario/usuario.service.ts\n            \n            injectable\n            UsuarioService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/pipes/lower-case.pipe.ts\n            \n            injectable\n            LowerCasePipe\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.5.9\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            pg : ^8.2.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TarefaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuarioModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_TarefaModule\n\n\n\ncluster_TarefaModule_providers\n\n\n\ncluster_UsuarioModule\n\n\n\ncluster_UsuarioModule_exports\n\n\n\ncluster_UsuarioModule_providers\n\n\n\n\nTarefaModule\n\nTarefaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTarefaModule->AppModule\n\n\n\n\n\nUsuarioModule\n\nUsuarioModule\n\nAppModule -->\n\nUsuarioModule->AppModule\n\n\n\n\n\nUsuarioService \n\nUsuarioService \n\nUsuarioService  -->\n\nUsuarioModule->UsuarioService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nAppModule -->\n\nCatsService->AppModule\n\n\n\n\n\nTarefaService\n\nTarefaService\n\nTarefaModule -->\n\nTarefaService->TarefaModule\n\n\n\n\n\nUsuarioService\n\nUsuarioService\n\nUsuarioModule -->\n\nUsuarioService->UsuarioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/public.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Public\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => SetMetadata('public', true)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
